module
    import 
        $$ @ ModelBuilderType
        @ ControllerType
        from '../app/types'
    import 
        as packiTypes
        from './types'
        # import { UserModelBuilder, GetUserModel } from './mongo/user';
    $*
    import 
        @ PackiModelBuilder
        @ GetPackiModel
        from './mongo/packi'
    *$
    $if wzCtx.Build.useFilesystem
        import 
            @ TemplatesController
            from './controllers/templates'
    import 
        @ PackiEditingController
        from './controllers/packiEditing'
    import 
        @ PackiGeneratingController
        from './controllers/packiGenerating'
    $if wzCtx.Build.packi.useAdmin
        import 
            @ PackiAdminController
            from './controllers/packiAdmin'
    $if false
        import 
            @ PackiController
            from './controllers/packi'
    import 
        @ ProductionsController
        from './controllers/productions'
    $if false
        import 
            @ ProxyController
            from './controllers/proxy'
    
    $if wzCtx.Build.useGithub
        import 
            @ GithubController
            from './controllers/github'
    
    $*
    +
    const packiModelGetters
        { 
            @ GetPackiModel
                # GetUserModel
    +
    const packiModelBuilders
        :[ 
            :ref ModelBuilderType
        =
            [ 
                @ PackiModelBuilder
                    # UserModelBuilder
    *$
    +
    const packiControllers
        :[ 
            :ref ControllerType
        =
            [ 
                @ new PackiEditingController()
                @ new PackiGeneratingController()
                $if wzCtx.Build.packi.useAdmin
                    @ new PackiAdminController()
                $if false
                    @ new PackiController()
                @ new ProductionsController()
                $if false
                    @ new ProxyController()
                $if wzCtx.Build.useFilesystem
                    @ new TemplatesController()
                $if wzCtx.Build.useGithub
                    @ new GithubController()
    +
    export 
        @ packiTypes
        $*
        @ packiModelGetters
        @ packiModelBuilders
        *$
        @ packiControllers