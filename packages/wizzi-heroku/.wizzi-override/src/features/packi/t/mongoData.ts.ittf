$group

    $
        var mongoSchemas = [{
            name: 'packiItem',
            Name: 'PackiItem',
            controllerName: 'PackiItem',
            controllerPath: '/api/v1/packi/item',
            fields: [
                { name: '_id', type: 'oid' },
                // { name: 'owner', type: 'objectRef', refSchema: 'User' },
                { name: 'owner', type: 'string' },
                { name: 'name', type: 'string' },
                { name: 'wizziSchema', type: 'string' },
                { name: 'mainIttf', type: 'string' },
                { name: 'files', type: 'string' },
                { name: 'dependencies', type: 'arrayRef', refSchema: 'PackiDependency', path: 'dependency' },
            ],
            fkey: 'owner',
            indexes:[
                { name: 'owner_name', fields:[{name: 'owner', sort:1}, {name: 'name', sort:1}], unique: true }
            ],
            collectionName: 'packiItems',
            setUpdatedAt: true
        },{
            name: 'packiDependency',
            Name: 'PackiDependency',
            fields: [
                { name: '_id', type: 'oid' },
                // { name: 'owner', type: 'objectRef', refSchema: 'User' },
                { name: 'owner', type: 'string' },
                { name: 'name', type: 'string' },
                { name: 'files', type: 'string' },
            ],
            fkey: 'owner',
            indexes:[
                { name: 'owner_name', fields:[{name: 'owner', sort:1}, {name: 'name', sort:1}], unique: true }
            ],
            collectionName: 'packiDependencies',
            setUpdatedAt: true
        }];
        function getSchema(name) {
            for (var i=0; i<mongoSchemas.length; i++) {
                if (mongoSchemas[i].name == name) { return mongoSchemas[i]; }
            }
        }
