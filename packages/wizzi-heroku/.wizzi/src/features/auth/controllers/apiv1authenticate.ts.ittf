module
    $
        var ctrl = {
            name: 'ApiV1Authenticate',
            path: '/api/v1/authenticate',
        }
    v08/ts/controller(&ctrl)
        $append imports
            import
                @ config
                from '../../config'
            import axios from 'axios'
            const myname = 'features.auth.controllers.apiv1authenticate'
        _ this.router.get('/github/callback', this.githubCallback)
        _ this.router.get('/google/callback', this.googleCallback)
        $append handlers
            v08/ts/handler(githubCallback)
                const body
                    {
                        @ client_id config.githubClientId
                        @ client_secret config.githubClientSecret
                        @ code request.query.code
                const options = { headers: { accept: 'application/json' } }
                _ axios.post(`https://github.com/login/oauth/access_token`, body, options)
                    ._ then
                        =>
                            param result
                                :any
                            return result.data['access_token']
                    ._ then
                        =>
                            param _token
                                :string
                            set (request as any).session.github_access_token = _token
                            _ (request as any).session.save
                                function
                                    param err
                                    if err
                                        error myname, 'githubCallback', 'error saving session', err
                                        return response.status(500).json({ message: err.message })
                                    _ response.redirect('/account/profile/github')
                    ._ catch
                        =>
                            param err
                                :any
                            error myname, 'githubCallback', 'error', err
                            _ response.status(500).json({ message: err.message })
            v08/ts/handler(googleCallback)
                const body
                    {
                        @ client_id config.googleClientId
                        @ client_secret config.googleClientSecret
                        @ code request.query.code
                        @ redirect_uri '${wzCtx.App.baseUrl}/api/${wzCtx.App.apiVersion}/authenticate/google/callback'
                        @ grant_type 'authorization_code'
                const options = { headers: { accept: 'application/json' } }
                _ axios.post(`https://oauth2.googleapis.com/token`, body, options)
                    ._ then
                        =>
                            param result
                                :any
                            return result.data['access_token']
                    ._ then
                        =>
                            param _token
                                :string
                            set (request as any).session.google_access_token = _token
                            _ (request as any).session.save
                                function
                                    param err
                                    if err
                                        error myname, 'githubCallback', 'error saving session', err
                                        return response.status(500).json({ message: err.message })
                                        log myname, 'githubCallback', 'session saved before redirect to /account/profile/google'
                                    _ response.redirect('/account/profile/google')
                    ._ catch
                        =>
                            param err
                                :any
                            _ response.status(500).json({ message: err.message })
