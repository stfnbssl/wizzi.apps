module
    $
        var ctrl = {
            name: 'ApiV1Post',
            path: '/api/v1/blog/post',
            apiSecured: true,
        }
    v08/ts/controller(&ctrl)
        $append imports
            import
                @ validatePost
                @ getListPost
                @ getPost
                @ createPost
                @ updatePost
                @ deletePost
                from '../api/post'
            +
            const myname = 'features/blog/controllers/apiv1post'
        v08/ts/route_api_secured( get, /:owner, this.getPostList)
        v08/ts/route_api_secured( get, /checkname/:owner/:name, this.getCheckPostName)
        v08/ts/route_api_secured( get, /:owner/:name, this.getPost)
        v08/ts/route_api_secured( post, /:owner/:name, this.postPost)
        v08/ts/route_api_secured( delete, /:id, this.deletePost)
        $append handlers
            v08/ts/handler(getPostList)
                _ getListPost
                    {
                        { query
                            @ owner request.params.owner
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_fail(getPostList)
            v08/ts/handler(getCheckPostName)
                _ validatePost
                    @ request.params.owner
                    @ request.params.name
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_fail(getCheckPostName)
            v08/ts/handler(getPost)
                _ getPost
                    @ request.params.owner
                    @ request.params.name
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_fail(getPost)
            v08/ts/handler(postPost)
                _ createPost
                    @ request.params.owner
                    @ request.params.name
                    @ request.body.title
                    @ request.body.content
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_fail(postPost)
            v08/ts/handler(putPost)
                _ updatePost
                    @ request.params.id
                    @ request.body.owner
                    @ request.body.name
                    @ request.body.title
                    @ request.body.content
                    @ request.body.state
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_fail(putPost)
            v08/ts/handler(deletePost)
                _ deletePost
                    @ request.params.id
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_fail(deletePost)
