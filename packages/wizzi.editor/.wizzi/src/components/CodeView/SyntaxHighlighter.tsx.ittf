module
    import React
        @ FunctionComponent 
        from 'react'
    import './SyntaxHighlighter.css'
    import { Prism } from 'react-syntax-highlighter'
    import { vscDarkPlus } from 'react-syntax-highlighter/dist/esm/styles/prism'

    export 
        :type SyntaxHighlighterProps
            :{ 
                :p filePath
                    :string 
                :p code
                    :string 
                :p showLineNumbers
                    :boolean 

    export
        class SyntaxHighlighter
            super React.Component
                :param 
                    :ref SyntaxHighlighterProps

            m componentDidMount
                const el1 = document.querySelector('.syntax-highlight-container > pre')
                $$ loog 'SyntaxHighlighter.el1', el1
                if el1 && el1.style
                    set el1.style.margin = 0
                    set el1.style.padding = 0
                    set el1.style.height = '100%'

            m render
                const language = getLanguage(this.props.filePath)
                return
                    div
                        @ className "syntax-highlight-container"
                        < Prism
                            @ language {language}
                            @ showLineNumbers={this.props.showLineNumbers}
                            @ style {vscDarkPlus}
                            + {this.props.code}

    export-default SyntaxHighlighter                      

    const mimeLanguageMap
        {
            @ '.js' 'javascript'
            @ '.jsx' 'javascript'
            @ '.ts' 'typescript'
            @ '.tsx' 'typescript'
            @ '.html' 'html'
            @ '.css' 'css'
            @ '.svg' 'svg'
            @ '.json' 'json'
            @ '.xml' 'xml'
    
    function getLanguage
        param path
            :string
        const ext2 = path.substr(path.lastIndexOf('.'))
        const rest = path.substr(0, path.lastIndexOf('.'))
        const ext = rest.substr(rest.lastIndexOf('.'))
        if ext2 == '.ittf'
            const lang = mimeLanguageMap[ext]
            return lang || 'text'
        else
            const lang = mimeLanguageMap[ext2]
            return lang || 'text'