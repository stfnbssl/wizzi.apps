module
    import 
        @ Reducer
        from 'redux'
    import 
        @ ActionType
        @ getType
        from 'typesafe-actions'
    import 
        @ getEventServiceInstance
        from '../../services'
    import 
        @ PackiFiles
        from '../packi'
    import 
        @ GeneratedArtifact
        from './types'
    import 
        as wizziActions
        from './actions'
    +
    export 
        :interface WizziState
            :p loading
                :boolean 
            :p error
                :optional 
                :any
            :p generatedArtifact
                :optional 
                :ref GeneratedArtifact
            :p mTreeBuildUpScript
                :optional 
                :string
            :p mTreeIttf
                :optional 
                :any
            :p jobGeneratedArtifacts
                :optional 
                :ref PackiFiles
            :p wizziMetaFolderIttfDocuments
                :optional 
                :ref PackiFiles
            :p wizzifiedIttfContent
                :optional 
                :string
            :p codeASTContent
                :optional 
                :string
    +
    const initialState
        :ref WizziState
        =
            { 
                @ loading false
                @ error undefined
                @ errorFilePath undefined
                @ generatedArtifact undefined
                @ mTreeBuildUpScript undefined
                @ mTreeIttf undefined
                @ jobGeneratedArtifacts undefined
                @ wizziMetaFolderIttfDocuments undefined
                @ wizzifiedIttfContent undefined
                @ codeASTContent undefined
    +
    export 
        :type WizziAction
            :ref ActionType
                :param 
                    :typeof wizziActions
    +
    const reducer
        :ref Reducer
            :param 
                :ref WizziState
            :param 
                :ref WizziAction
        => 
            param state = initialState
            param action
            switch action.type
                +
                case getType(wizziActions.generateArtifactRequest)
                    log "wizziActions.generateArtifactRequest"
                    return 
                        { 
                            @ ...state
                            @ loading true
                            @ generatedArtifact undefined
                            @ wizzifiedIttfContent undefined
                            @ codeASTContent undefined
                            @ error undefined
                            @ requestFilePath action.payload.filePath
                case getType(wizziActions.generateArtifactSuccess)
                    info "wizziActions.generateArtifactSuccess", Object.keys(action.payload)
                    if action.payload.error || action.payload.err
                        return 
                            { 
                                @ ...state
                                @ loading false
                                @ error (action.payload.error || action.payload.err)
                    else
                        return 
                            { 
                                @ ...state
                                @ loading false
                                $if wzConfigIsStudio
                                    @ generatedArtifact action.payload
                                $else
                                    @ generatedArtifact action.payload.generatedArtifact
                case getType(wizziActions.generateArtifactError)
                    error "wizziActions.generateArtifactError", action.payload
                    return 
                        { 
                            @ ...state
                            @ loading false
                            @ error action.payload
                +
                case getType(wizziActions.mTreeBuildUpScriptRequest)
                    log "wizziActions.mTreeBuildUpScriptRequest"
                    return 
                        { 
                            @ ...state
                            @ loading true
                            @ mTreeBuildUpScript undefined
                            @ error undefined
                            @ requestFilePath action.payload.filePath
                case getType(wizziActions.mTreeBuildUpScriptSuccess)
                    info "wizziActions.mTreeBuildUpScriptSuccess", Object.keys(action.payload)
                    if action.payload.error || action.payload.err
                        return 
                            { 
                                @ ...state
                                @ loading false
                                @ error (action.payload.error || action.payload.err)
                    else
                        return 
                            { 
                                @ ...state
                                @ loading false
                                @ ...action.payload
                case getType(wizziActions.mTreeBuildUpScriptError)
                    error "wizziActions.mTreeBuildUpScriptError", action
                    return 
                        { 
                            @ ...state
                            @ loading false
                            @ error action.payload
                +
                case getType(wizziActions.mTreeRequest)
                    log "wizziActions.mTreeRequest"
                    return 
                        { 
                            @ ...state
                            @ loading true
                            @ mTreeIttf undefined
                            @ error undefined
                            @ requestFilePath action.payload.filePath
                case getType(wizziActions.mTreeSuccess)
                    info "wizziActions.mTreeSuccess", Object.keys(action.payload)
                    set action.payload.mTreeIttf = action.payload.mTree
                    if action.payload.error || action.payload.err
                        return 
                            { 
                                @ ...state
                                @ loading false
                                @ error (action.payload.error || action.payload.err)
                    else
                        return 
                            { 
                                @ ...state
                                @ loading false
                                @ ...action.payload
                case getType(wizziActions.mTreeError)
                    error "wizziActions.mTreeError", action
                    return 
                        { 
                            @ ...state
                            @ loading false
                            @ error action.payload
                +
                case getType(wizziActions.executeJobRequest)
                    log "wizziActions.executeJobRequest"
                    return 
                        { 
                            @ ...state
                            @ loading true
                            @ jobGeneratedArtifacts undefined
                            @ error undefined
                            @ requestFilePath '*'
                case getType(wizziActions.executeJobSuccess)
                    info "wizziActions.executeJobSuccess", Object.keys(action.payload)
                    if action.payload.error || action.payload.err
                        return 
                            { 
                                @ ...state
                                @ loading false
                                @ error (action.payload.error || action.payload.err)
                    else
                        return 
                            { 
                                @ ...state
                                @ loading false
                                @ jobGeneratedArtifacts action.payload.generatedArtifacts
                case getType(wizziActions.executeJobError)
                    error "wizziActions.executeJobError", action.payload
                    return 
                        { 
                            @ ...state
                            @ loading false
                            @ error action.payload
                +
                case getType(wizziActions.executeWizziMetaFolderRequest)
                    log "wizziActions.executeWizziMetaFolderRequest"
                    return 
                        { 
                            @ ...state
                            @ loading true
                            @ wizziMetaFolderIttfDocuments undefined
                            @ error undefined
                            @ requestFilePath '*'
                case getType(wizziActions.executeWizziMetaFolderSuccess)
                    info "wizziActions.executeWizziMetaFolderSuccess", Object.keys(action.payload)
                    if action.payload.error || action.payload.err
                        return 
                            { 
                                @ ...state
                                @ loading false
                                @ error (action.payload.error || action.payload.err)
                    else
                        return 
                            { 
                                @ ...state
                                @ loading false
                                @ wizziMetaFolderIttfDocuments action.payload
                case getType(wizziActions.executeWizziMetaFolderError)
                    error "wizziActions.executeWizziMetaFolderError", action.payload
                    return 
                        { 
                            @ ...state
                            @ loading false
                            @ error action.payload
                +
                case getType(wizziActions.wizzifyRequest)
                    log "wizziActions.wizzifyRequest"
                    return 
                        { 
                            @ ...state
                            @ loading true
                            @ wizzifiedIttfContent undefined
                            @ generatedArtifact undefined
                            @ error undefined
                            @ requestFilePath action.payload.filePath
                case getType(wizziActions.wizzifySuccess)
                    info "wizziActions.wizzifySuccess", Object.keys(action.payload)
                    if action.payload.error || action.payload.err
                        return 
                            { 
                                @ ...state
                                @ loading false
                                @ error (action.payload.error || action.payload.err)
                    else
                        return 
                            { 
                                @ ...state
                                @ loading false
                                @ ...action.payload
                case getType(wizziActions.wizzifyError)
                    error "wizziActions.wizzifyError", action
                    return 
                        { 
                            @ ...state
                            @ loading false
                            @ error action.payload
                +
                case getType(wizziActions.codeASTRequest)
                    log "wizziActions.codeASTRequest"
                    return 
                        { 
                            @ ...state
                            @ loading true
                            @ codeASTContent undefined
                            @ wizzifiedIttfContent undefined
                            @ generatedArtifact undefined
                            @ error undefined
                            @ requestFilePath action.payload.filePath
                case getType(wizziActions.codeASTSuccess)
                    info "wizziActions.codeASTSuccess", Object.keys(action.payload)
                    if action.payload.error || action.payload.err
                        return 
                            { 
                                @ ...state
                                @ loading false
                                @ error (action.payload.error || action.payload.err)
                    else
                        return 
                            { 
                                @ ...state
                                @ loading false
                                @ ...action.payload
                case getType(wizziActions.codeASTError)
                    error "wizziActions.codeASTError", action
                    return 
                        { 
                            @ ...state
                            @ loading false
                            @ error action.payload
                +
                case getType(wizziActions.changeSelectedFile)
                    info "wizziActions.changeSelectedFile", Object.keys(action.payload)
                    return 
                        { 
                            @ ...state
                            @ loading false
                            @ error undefined
                            @ generatedArtifact undefined
                            @ mTreeBuildUpScript undefined
                            @ mTreeIttf undefined
                            @ jobGeneratedArtifacts undefined
                            @ wizziMetaFolderIttfDocuments undefined
                            @ wizzifiedIttfContent undefined
                +
                default 
                    return state
    +
    export-default reducer