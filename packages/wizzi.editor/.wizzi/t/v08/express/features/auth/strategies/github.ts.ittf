$group
    $params &md
    import
        @ Strategy
        from 'passport-github2'
    $if wzCtx.Build.useMongoDb
        import
            @ GetAuthUserModel
            @ AuthUserModelType
            from '../mongo/authuser'
        import
            @ GetAccountModel
            @ AccountModelType
            from '../mongo/account'
    import
        @ config
        from '../../config'
    import
        @ AuthRequest
        from '../types'
    $if wzCtx.Build.useMongoDb
        let accountModel
            :ref AccountModelType
            # let authUserModel: AuthUserModelType;
    export
        function createStrategy
            $if wzCtx.Build.useMongoDb
                set accountModel = GetAccountModel()
                    # authUserModel = GetAuthUserModel();
            log '============================================================'
            log 'features.auth.strategies.github.createStrategy', 'config.githubClientId', config.githubClientId, 'config.clientSecret', config.githubClientSecret, 'config.githubCallbackURL', config.githubCallbackURL
            return
                new Strategy
                    {
                        @ clientID config.githubClientId
                        @ clientSecret config.githubClientSecret
                        @ callbackURL config.githubCallbackURL
                        @ passReqToCallback true
                    function
                        param req
                            :ref AuthRequest
                        param accessToken
                            :string
                        param refreshToken
                            :string
                        param profile
                            :any
                        param done
                            :any
                        log '============================================================'
                        log 'features.auth.strategies.github.callback', 'req.session.socketId', req.session.socketId, 'req.session.socketUserId', req.session.socketUserId, 'req.sessionID', req.sessionID, 'req.session', req.session, 'req.user', req.user, 'accessToken', accessToken, 'refreshToken', refreshToken, 'profile', profile
                        $if wzCtx.Build.useMongoDb
                            var account = new accountModel()
                            set account.domain = 'github.com'
                            set account.uid = profile.id
                            set account.username = profile.username
                            set account.displayName = profile.displayName
                            set account.avatar_url = profile._json.avatar_url
                            var t
                                {
                                    @ kind 'oauth'
                                    @ token accessToken
                                    { attributes
                                        @ refreshToken
                            _ account.tokens.push(t)
                            return done(null, account)
                        $else
                            return
                                _ done
                                    @ null
                                    {
                                        @ id profile.id
