module
    $
        var moduleName = 'features.wizziHubProductions.api.production';

    #
        # This api put toghether hub productions for executing wizzi productions.
        # Hub productions contain files and folder with ittf documents
        # and a .packi/config.json.ittf file that declares context objects and
        # tfolder usages.
    import
        @ packiTypes
        @ packiConstants
        from '#/src/features/packi'
    import
        @ config
        from '#/src/features/config'
    import
        @ wizziProds
        from '#/src/features/wizziProductions'
    import
        as productionTypes
        from '../types'
    import
        @ ValidateResult
        @ CRUDResult
        from '#/src/features/types'
    import
        as artifactApi
        from './artifact'
    import
        as packageApi
        from './package'
    import
        as pluginApi
        from './plugin'
    import
        as metaApi
        from './meta'
    import
        as tFolderApi
        from './tfolder'
    import
        @ getArtifactGeneration
        @ getArtifactTransformation
        @ getDefaultContext_withCache
        @ getArtifactContextItem
        from './artifact'
    import
        @ mergePackiFiles
        from '../utils'
    +
    const myname = '${moduleName}'
    +
    function transformProductionObject
        param productionType
            :ref productionTypes.PackiProduction
        param productionObject
            :any
        # TODO
        set productionObject.packiProduction = productionType
        set productionObject.packiConfig = productionObject.packiFiles[packiConstants.packiConfigPath]
        if !productionObject.packiConfig
            # TODO set a default packiConfig based on productionType
        return productionObject
    +
    export
        async-function getProductionById
            param productionType
                :ref productionTypes.PackiProduction
            param id
                :string
            return
                new Promise
                    =>
                        param resolve
                        param reject
                        if productionType == 'artifact'
                            _ artifactApi.getArtifactProductionById
                                @ id
                                ._ then
                                    =>
                                        param result
                                            :any
                                        if result.ok
                                            _ resolve
                                                @ result.item
                                        else
                                            _ reject
                                                @ result
                                v08/ts/catch_reject( ${moduleName}.getProductionById.getArtifactProductionById )
                        elif productionType == 'package'
                            _ packageApi.getPackageProductionById
                                @ id
                                ._ then
                                    =>
                                        param result
                                            :any
                                        if result.ok
                                            _ resolve
                                                @ result.item
                                        else
                                            _ reject
                                                @ result
                                v08/ts/catch_reject( ${moduleName}.getProductionById.getPackageProductionById )
                        elif productionType == 'meta'
                            _ metaApi.getMetaProductionById
                                @ id
                                ._ then
                                    =>
                                        param result
                                            :any
                                        if result.ok
                                            _ resolve
                                                @ result.item
                                        else
                                            _ reject
                                                @ result
                                v08/ts/catch_reject( ${moduleName}.getProductionById.getMetaProductionById )
                        elif productionType == 'plugin'
                            _ pluginApi.getPluginProductionById
                                @ id
                                ._ then
                                    =>
                                        param result
                                            :any
                                        if result.ok
                                            _ resolve
                                                @ result.item
                                        else
                                            _ reject
                                                @ result
                                v08/ts/catch_reject( ${moduleName}.getProductionById.getPluginProductionById )
                        elif productionType == 'tfolder'
                            _ tFolderApi.getTFolderProductionById
                                @ id
                                ._ then
                                    =>
                                        param result
                                            :any
                                        if result.ok
                                            _ resolve
                                                @ result.item
                                        else
                                            _ reject
                                                @ result
                                v08/ts/catch_reject( ${moduleName}.getProductionById.getTFolderProductionById )
                        else
                            throw new Error("${moduleName}.getProductionById: productionType " + productionType + " not implemented")
    +
    export
        async-function getProductionObject
            param productionType
                :ref productionTypes.PackiProduction
            param owner
                :string
            param name
                :string
            return
                new Promise
                    =>
                        param resolve
                        param reject
                        if productionType == 'artifact'
                            _ artifactApi.getArtifactProductionObject
                                @ owner
                                @ name
                                ._ then
                                    =>
                                        param productionObject
                                            :any
                                        _ resolve
                                            _ transformProductionObject
                                                @ productionType
                                                @ productionObject
                                v08/ts/catch_reject( ${moduleName}.getProductionObject.getArtifactProductionObject )
                        elif productionType == 'package'
                            _ packageApi.getPackageProductionObject
                                @ owner
                                @ name
                                ._ then
                                    =>
                                        param productionObject
                                            :any
                                        _ resolve
                                            _ transformProductionObject
                                                @ productionType
                                                @ productionObject
                                v08/ts/catch_reject( ${moduleName}.getProductionObject.getPackageProductionObject )
                        elif productionType == 'meta'
                            _ metaApi.getMetaProductionObject
                                @ owner
                                @ name
                                ._ then
                                    =>
                                        param productionObject
                                            :any
                                        _ resolve
                                            _ transformProductionObject
                                                @ productionType
                                                @ productionObject
                                v08/ts/catch_reject( ${moduleName}.getProductionObject.getMetaProductionObject )
                        elif productionType == 'plugin'
                            _ pluginApi.getPluginProductionObject
                                @ owner
                                @ name
                                ._ then
                                    =>
                                        param productionObject
                                            :any
                                        _ resolve
                                            _ transformProductionObject
                                                @ productionType
                                                @ productionObject
                                v08/ts/catch_reject( ${moduleName}.getProductionObject.getPluginProductionObject )
                        elif productionType == 'tfolder'
                            _ tFolderApi.getTFolderProductionObject
                                @ owner
                                @ name
                                ._ then
                                    =>
                                        param productionObject
                                            :any
                                        _ resolve
                                            _ transformProductionObject
                                                @ productionType
                                                @ productionObject
                                v08/ts/catch_reject( ${moduleName}.getProductionObject.getTFolderObject )
                        else
                            throw new Error("${moduleName}.getProductionObject: productionType " + productionType + " not implemented")
    +
    export
        async-function prepareProductionById
            param productionType
                :ref productionTypes.PackiProduction
            param id
                :string
            param queryContext
                :string
            param rootContext
                :any
            return
                new Promise
                    =>
                        param resolve
                        param reject
                        _ getProductionById
                            @ productionType
                            @ id
                            ._ then
                                =>
                                    param productionItem
                                        :any
                                    _ prepareProduction
                                        @ productionType
                                        @ productionItem.owner
                                        @ productionItem.name
                                        @ queryContext
                                        @ rootContext
                                        ._ then
                                            =>
                                                param result
                                                    :any
                                                _ resolve
                                                    @ result
                                        v08/ts/catch_reject( ${moduleName}.prepareProductionById.prepareProduction )
                            v08/ts/catch_reject( ${moduleName}.prepareProductionById.getProductionById )
    +
    export
        async-function prepareProduction
            param productionType
                :ref productionTypes.PackiProduction
            param owner
                :string
            param productionName
                :string
            param queryContext
                :string
            param rootContext
                :any
            #
                # __key__production_flow
                # returns an object with packiFiles and context ready for generation
                # Called by features.production.api.artifact.getArtifactGeneration_withPrepare
                # Called by features.production.api.meta.generateMetaProduction
                # Called by features.production.api.meta.getTemplatePackiFiles
                # Called by handlers of features.production.controllers.apiv1generations
            log myname + 'prepareProduction entered', owner, productionName
            return
                new Promise
                    =>
                        param resolve
                        param reject
                        _ getDefaultContext_withCache
                            @ owner
                            @ rootContext
                            ._ then
                                =>
                                    param defaultContext
                                        :any
                                    log myname + 'prepareProduction.getDefaultContext_withCache completed', Object.keys(defaultContext)
                                    _ getProductionObject
                                        @ productionType
                                        @ owner
                                        @ productionName
                                        ._ then
                                            =>
                                                param productionObject
                                                    :any
                                                $$ loog 'prepareProduction.productionObject got', Object.keys(productionObject)
                                                if productionObject.packiConfig
                                                    $$ loog 'prepareProduction.productionObject packiConfig', productionObject.packiConfig
                                                    _ getProductionSetFromProductionObject
                                                        @ owner
                                                        @ productionName
                                                        @ productionObject.packiConfig
                                                        @ productionObject.packiFiles
                                                        @ defaultContext
                                                        ._ then
                                                            =>
                                                                param productionSet
                                                                    :any
                                                                set productionObject.packiFiles = productionSet.packiFiles
                                                                set productionObject.context = productionSet.context
                                                                _ getProductionSetByQueryContext
                                                                    @ owner
                                                                    @ productionName
                                                                    @ queryContext
                                                                    @ productionObject.packiFiles
                                                                    @ productionObject.context
                                                                    ._ then
                                                                        =>
                                                                            param queryProductionSet
                                                                                :any
                                                                            set productionObject.packiFiles = queryProductionSet.packiFiles
                                                                            set productionObject.context = queryProductionSet.context
                                                                            _ resolve
                                                                                @ productionObject
                                                                    v08/ts/catch_reject( ${moduleName}.prepareProduction.getContextByQueryContext )
                                                        v08/ts/catch_reject( ${moduleName}.prepareProduction.getContextByProductionObject )
                                                else
                                                    _ getProductionSetByQueryContext
                                                        @ owner
                                                        @ productionName
                                                        @ queryContext
                                                        @ productionObject.packiFiles
                                                        @ defaultContext
                                                        ._ then
                                                            =>
                                                                param queryProductionSet
                                                                    :any
                                                                set productionObject.packiFiles = queryProductionSet.packiFiles
                                                                set productionObject.context = queryProductionSet.context
                                                                _ resolve
                                                                    @ productionObject
                                                        v08/ts/catch_reject( ${moduleName}.prepareProduction.getContextByQueryContext )
                                        v08/ts/catch_reject( ${moduleName}.prepareProduction.getProductionObject )
                            v08/ts/catch_reject( ${moduleName}.prepareProduction.getDefaultContext_withCache )
    $include production/ctx_from_production_object
    $include production/ctx_from_query_string
    $include production/metaCtx_from_packi_config