module
    $include set-ctx-functions
    $
        setCtxDep ('express-session', '^1.18.0');
        setCtxDevDep ('@types/express-session', '^1.18.0');
        setCtxEnvValues ('SESSION_SECRET', 'sessionSecret', 'str');
    import
        @ Application
        @ CookieOptions
        from 'express'
    import
        @ MiddlewareType
        from '#/src/features/app/types'
    import session
        from 'express-session'
    import
        @ config
        from '#/src/features/config'
    +
    export
        const SessionMiddleware
            :ref MiddlewareType
            =
                =>
                    param app
                        :ref Application
                    info "SessionMiddleware process.env.NODE_ENV: " + process.env.NODE_ENV
                    const cookieOptions
                        :ref CookieOptions
                        =
                            {
                                @ secure
                                    iif process.env.NODE_ENV === 'production'
                                        then true
                                        else false
                                    # serve secure cookies, requires https
                                @ httpOnly false
                                @ sameSite 'none'
                                @ maxAge 14 * 24 * 60 * 60 * 1000
                                    # expires in 14 days
                    const sessionOptions
                        :ref session.SessionOptions
                        =
                            {
                                @ name '${wzCtx.name}.sid'
                                @ secret config.sessionSecret
                                @ resave false
                                @ saveUninitialized false
                    if process.env.NODE_ENV == "production"
                        _ app.set('trust proxy', 1)
                    _ app.use(session(sessionOptions))
                    info "SessionMiddleware installed"