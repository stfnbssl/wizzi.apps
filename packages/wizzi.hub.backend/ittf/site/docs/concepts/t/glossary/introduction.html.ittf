$group
    $
        var sect = {
            title: 'Wizzi Glossary'
        };

    section(&sect)

		table-doc( glo )

            glo-item( $fragment command )
                span
                    + The $fragment command is an ITTF Template Command for declaring
                        \b an inlined ITTF Fragment.

            glo-item( $include command )
                span
                    + The $include command is an ITTF Template Command for including
                        \b an ITTF Fragment in the node position of the command.

            glo-item( *__copy folders )
                span
                    + When mass generating artifacts using a 
                    high-code( glob )
                    + pattern, folders having a name ending with 
                    high-code( __copy )
                    + are not generated but simply copied as is.

            glo-item( Artifact Generator )
                span
                    + An Artifact Generator is a javascript module exported by a Wizzi Plugin
                        \b that takes as input a Wizzi Model Instance and, 
                        \b optionally, a context object, and writes a software artifact.
                        \b An Artifact Generation is the main actions of a Wizzi Production.

            glo-item( Included ITTF Fragment )
                span
                    + An Included ITTF Fragment is a reusable fragment of an ITTF Document, contained in its own file
                        \b or inlined,
                        \b that has been incuded in an includer, without passing of parameters, using an $include command.

            glo-item( ITTF Document )
                span
                    + ITTF, Indented Text Tree Format, is a document format for
                        \b declaring a textual representation of
                        \b a tree data structure of name-valued nodes.
                        \b It is the source format of Wizzi Models.
                        \b It consists of one Primary ITTF Document and,
                        \b optionally, one or more ITTF Fragments mixed or included.

            glo-item( ITTF Fragment path resolution )
                span Include commands and mix actions declare the path of the ITTF Document
                    \b that must be mixed or included. At first the path to match is built
                    \b joining the current folder path of the includer document and the declared path
                    \b of the included document. If this match fails, then the 't' folder rule is applied,
                    \b starting from the current folder path and going up on the folder tree.
                    \b See 't folder'.
            
            glo-item( Primary ITTF Document )
                span
                    + A Primary ITTF Document acts as the starting point for loading an mTree. 
                        \b It's a text file that can contain and combine smaller ITTF Fragments. 
                        \b However, the main root of the Primary ITTF Document might not become the 
                        \b final root node of the mTree after processing. 
                        \b This is because the Primary ITTF Document's root can be a Mix Action
                        \b that inserts its content beneath another node within a mixed ITTF Fragment.

            glo-item( ITTF Node )
                span
                    + An ITTF Node is a node of the tree structure of an ITTF Document.
                        \b It is a logical line of code that can be broken in many
                        \b phisical lines with line continuations chars. 
                        \b It is a name value pair of text strings, with children ITTF Nodes, and
                        \b one parent ITTF Node. The ITTF Root Node has no parent node.
            
            glo-item( ITTF Node Name)
                span
                    + An ITTF Node Name is the name part of an ITTF Node.

            glo-item( ITTF Node Value)
                span
                    + An ITTF Node Value is the value part of an ITTF Node.

            glo-item( ITTF Fragment )
                span
                    + An ITTF Fragment is a branch ITTF Node that can be included or mixed
                        \b in an Primary ITTF Document or in another ITTF Fragment.
                        \b It can be defined in a separate file, and retrieved using
                        \b the ITTF Document path resolution or can be inlined, 
                        \b using the Template Command
                    high-code( $fragment fragment-name )
                    + , and referenced by name.

            glo-item( ITTF Processing )
                span
                    + The ITTF Processing of an ITTF Document is the parsing of the
                        \b source documents, the resolution of references to ITTF Fragments, 
                        \b their inclusion or mix, the execution of ITTF Template Commands and JsWizzi expressions,
                        \b and, at the end, the build up of the resulting node structure that will be loaded into an mTree instance.

            glo-item( ITTF Root Node )
                span
                    + An ITTF Root Node is the root node of an ITTF Source Unit

            glo-item( ITTF Scan Feature )
                span
                    + The ITTF Scan Feature is a Wizzi Feature for 
                        \b keeping tracks and easily retrieve the dependencies of mixed and included ITTF Fragments.

            glo-item( ITTF Source Unit )
                span
                    + An ITTF Source Unit is an ITTF Node branch with a name,
                        \b that can be referenced in a Wizzi Action.
                        \b Primary ITTF Documents (files) and ITTF Fragments (files or inlined) are
                        \b the ITTF Source Units of Wizzi. An ITTF Source Unit must have a single ITTF Root Node.
                        \b You can define an ITTF Fragment with many root nodes using the convenience
                        \b ITTF Template Command \b
                        high-code( $group )
                    + \b as ITTF Root Node.

            glo-item( ITTF Template Command )
                span
                    + An ITTF Template Command is an instruction for the ITTF Template Engine.
                        \b It is an ITTF Node with a name starting with the \b
                    high-code( $ )
                    + \b char. It can modify variables in the JsWizzi Evaluation Context or 
                        \b manipulate the node structure of the ITTF Document, merging nodes with context data,
                        \b including and excluding node branches, etc...

            glo-item( ITTF Template Engine )
                span 
                    + The ITTF Template Engine is a Wizzi Kernel Feature that manages
                        \b the template commands and the JsWizzi expressions
                        \b contained in an ITTF Document.

            glo-item( JsWizzi )
                span 
                    + JsWizzi is the script engine used by the ITTF Template Engine of Wizzi.
                        \b It is a sandboxed subset of javascript. Expressions in ITTF Node Values
                        \b and ITTF Template Commands are written in JsWizzi.

            glo-item( JsWizzi Evaluation Context )
                span 
                    + The JsWizzi Evaluation Context is the evaluation context of JsWizzi during
                        \b an ITTF Processing. The properties can be set at various leveles. 1) a global
                        \b context can be set instantiating a Wizzi Factory Istance; 2) an action context
                        \b can be set calling the method for the action; 3) Ittf documents can declare
                        \b global variables (the scope are the fragment of the document) using the \b
                    high-code( $global )
                    + command;  3) Ittf documents can declare
                        \b local variables using the 
                    high-code( $ )
                    + command.

            glo-item( Language Artifact Generator )
                span 
                    + A Language Artifact Generator is an Artifact Generator that generate 
                        \b code files written in a Programming Language (PL).
                        \b For example the
                    high-code( js/module )
                    + and
                    high-code( ts/module )
                    + Artifact Generators of the \b
                    to-plugin( js )
                    + and
                    to-plugin( ts )
                    + plugins.

            glo-item( Language Wizzi Schema )
                span 
                    + A Language Wizzi Schema is a Wizzi Schema that defines an ITTF Document Type
                        \b that an artifact generator can transform in a Programming Language (PL) code file.

            glo-item( Meta generation )
                span
                    + See `Meta production`

            glo-item( Meta production )
                span

                    + A meta production is a data driven creation of a Wizzi Package. 
                        \b The entire folder and file structure of the package can be templated.
                        \b The result of a meta generation are Ittf Documents. 

            glo-item( Mix Action )
                span
                    + A Mix Action merges a Mixed ITTF Fragment into a mixer ITTF Document.

            glo-item( Mixed ITTF Fragment )
                span
                    + A Mixed ITTF Fragment is a reusable fragment of an ITTF Document, 
                        \b that has ben merged in a mixer document, with passing of parameters, using a Mix Action.
                        \b The ITTF Nodes of a Mixed ITTF Fragment mantain the JsWizzi Evaluation Context of
                        \b their original ITTF Source Unit.

            glo-item( Model Transformer )
                span 
                    + A Model Trasformer is a javascript module exported by a Wizzi Plugin
                        \b that takes as input a Wizzi Model Instance and, 
                        \b optionally, a context object, and gives as output
                        \b a modified Wizzi Model Instance or a new POJO object.

            glo-item( mTree )
                span 
                    + An mTree is the result of the mTree Loading of a ITTF Document.
                        \b mTrees are tree data structures, in-memory objects that are not persisted.
                        \b mTrees are verified and loaded into Wizzi Model Instances.
                        \b A Wizzi Model Loader, optionally, can pre-process an mTree before loading it.

            glo-item( mTree Loader)
                span
                    + An mTree loader processes a primary ITTF document and all its associated fragments using ITTF Processing standards. 
                        \b Then, it loads the resulting data structure into an mTree.

            glo-item( mTree Pre-processor)
                span
                    + An mTree Pre-processor can modify an mTree after its loading and
                        \b before its processing by a Wizzi Model Loader.
                        \b It must be declared in a Wizzi Schema and must be written
                        \b in the 'lib\wizzi\models' folder of a Wizzi Plugin.

            glo-item( Semantic Ittf Node )
                span
                    + A Semantic Ittf Node contains a name value pair that has a meaning
                        \b in the document type (Wizzi Schema). An mTree contains
                        \b Semantic Ittf Nodes only. See
                    high-code( Template Ittf Node )

            glo-item( t folder )
                span Folders named 't' have special rules for the path resolution
                    \b of mixed and included ITTF Documents. In the folder structure
                    \b of a Wizzi Package, ITTF Documents contained in a 't' folder,
                    \b can be referenced with the same rules that apply to NodeJs packages
                    \b in 'node_modules' folders. They are searched up on the folder tree, until the  
                    \b relative path of the mix or include call is matched or the path resolution fails.

            glo-item( Template Ittf Node )
                span
                    + A Template Ittf Node contains instructions for building the mTree Semantic Nodes structure.
                        \b See
                    high-code( Semantic Ittf Node )

            glo-item( Virtual Store System )
                span 
                    + The store system of Wizzi is virtualized. 
                        \b When instantiating a
                    high-code( WizziFactory )
                    + instance you can select the Store Kind. Disk file system is the default.
                        \b Virtual Store Systems are implemented by the
                    to-wizzi-package( wizzi-repo )
                    + core package. Available store kinds are:
                    high-code( filesystem )
                    + ,
                    high-code( mongodb )
                    + and 
                    high-code( json )
                    + .

            glo-item( Wizzi Action )
                span 
                    + Wizzi Actions are the steps of a Wizzi Production. The main Wizzi Actions are: \b
                    high-code( ITTF Processing
                    + , 
                    high-code( mTree Loading
                    + , 
                    high-code( mTree pre-processing
                    + ,
                    high-code( Wizzi Model Loading
                    + ,
                    high-code( Model Transformation
                    + , 
                    high-code( Artifact Generation
                    + . Wizzi Actions are orchestrated by \b
                    high-code( Wizzi Jobs
                    + ,
                    high-code( wizziHub Jobs
                    + , or programmatically using the
                    high-code( Wizzi API
                    + .

            glo-item( Wizzi API )
                span
                    + It is an API for executing programmatically the productions of the Wizzi Factory.
                        \b It is implemented by an instance of the
                    high-code( WizziFactory )
                    + class, exported by the
                    to-wizzi-package( wizzi )
                    + package.

            glo-item( Wizzi CLI )
                span
                    + The Wizzi command line interface (CLI). It is used to perform basic functionality, 
                        \b such as executing a Wizzi Production, 
                        \b creating a new Wizzi Package based on a starter, 
                        \b wizzifying an existing artifact or a folder of artifacts.

            glo-item( Wizzi Core Packages )
                span
                    + The Wizzi Core Packages are the
                    to-wizzi-package( wizzi )
                    + ,
                    to-wizzi-package( wizzi-utils )
                    + ,
                    to-wizzi-package( wizzi-mtree )
                    + ,
                    to-wizzi-package( wizzi-repo )
                    + packages.

            glo-item( Wizzi Core Plugin )
                span
                    + The Wizzi Core Plugins are the
                    to-plugin( wizzi-core )
                    + ,
                    to-plugin( wizzi-js )
                    + ,
                    to-plugin( wizzi-web )
                    + packages.

            
            glo-item( Wizzi Factory )
                span
                    + It is the set of Wizzi features for producing artifacts.
                        \b Wizzi is a software factory!

            glo-item( Wizzi Factory Instance )
                span
                    + A Wizzi Factory Instance is the main object of the Wizzi Platform.
                        \b Declares the methods for executing almost every Wizzi Action.
                        \b Most Wizzi Actions have a reference to the current Wizzi Factory Instance
                        \b in their execution context so that they can require services.

            glo-item( Wizzi Hub )
                span
                    + Wizzi Hub is a NodeJS / Express / MongoDb / Typescript application
                        \b running on the the cloud that can be used for \b
                    high-code( sharing your productions )
                    + with other developers and \b
                    high-code( calling generation services )
                    + over the network.
            
            glo-item( Wizzi Job )
                span
                    + The Wizzi Job is the Task Manager of Wizzi. It is implemented as
                        \b a Wizzi Kernel Schema of type \b
                    high-code( wzjob )
                    + \b where you can define Wizzi Productions. A Wizzi Job can be executed
                        \b using the \b
                    high-code( wizzi )
                    + \b command of the Wizzi CLI or, programmatically, using the Wizzi API.

            glo-item( Wizzi Kernel Feature )
                span
                    + A feature implemented by a Wizzi Core Package or a Wizzi Core Plugin.
            
            glo-item( Wizzi Package Production )
                span
                    + A Wizzi Package Production is a series of Wizzi Productions 
                        \b for creating a new Wizzi Package.
                        \b It is executed by the Wizzi CLI after selecting a Wizzi Package Starter.

            glo-item( Wizzi Model DOM )
                span
                    + A Wizzi Model DOM is an object model implemented in a javascript module
                        \b generate from a Wizzi Schema. The Wizzi Model DOM generation is
                        \b a kernel feature of the \b\
                    to-plugin( wzschema )
                    + \b plugin and the class structure of the DOM is a Wizzi feature. Class
                        \b methods instead can be user defined.

            glo-item( Wizzi Model Instance )
                span 
                    + A Wizzi Model Instance is an istance of a Wizzi Model DOM created by a
                        \b Wizzi Model Loading. It is the main context object used
                        \b by Wizzi Actions.

            glo-item( Wizzi Model Loading )
                span
                    + The Wizzi Model Loading is the action implemented by a Wizzi Model Factory 
                        \b and a Wizzi Model Doms generated from a Wizzi Schema.
                        \b It creates a Wizzi Model Instance and loads in it an mTree,
                        \b validates the mTree nodes, instantiates the classes of the DOM
                        \b and executes the \b
                    high-code( verify )
                    + \b and \b
                    high-code( initialize )
                    + methods. The result is a Wizzi Model Instance ready for use as a context object
                        \b in others Wizzi Actions.

            glo-item( Wizzi Package )
                span
                    + A Wizzi Package is a package that uses Wizzi for generating some, or all, of its artifacts.
                        \b A standard Wizzi Package contains a \b
                    high-code( .wizzi )
                    + folder.
            
            glo-item( Wizzi Platform )
                span
                    + The Wizzi Platform is the entire ecosystem of Wizzi. Its main components are the \b
                    high-code( Wizzi Kernel )
                    + , the \b
                    high-code( Wizzi Plugins )
                    + , the \b
                    high-code( Wizzi Meta Plugins )
                    + , the \b
                    high-code( Wizzi CLI )
                    + , the \b
                    high-code( Wizzi API )
                    + ,
                    high-code( Wizzi Studio )
                    + and
                    high-code( Wizzi Hub )
                    + .

            $*
            glo-item( Wizzi Package Starter )
                span
                    + A Wizzi Package Starter is a template of a Wizzi Package,
                        \b containing some domain specific Wizzi Productions,
                        \b that is used by the Wizzi CLI
                        \b as a starter for a new Wizzi Package.
                        \b Examples of available starters are: \b
                    high-code(static-website)
                    + , \b 
                    high-code(express-server)
                    + , \b 
                    high-code(wizzi-plugin)
                    + .
            *$

            glo-item( Wizzi Plugin )
                span
                    + A Wizzi Plugin implements one or more Wizzi Schemas. For each schema the plugin must implement
                        \b its Wizzi Model Loader and can implement 
                        \b Artifact Generators, Model Transformers, a Wizzifier and a documentation Cheatsheet.
                        \b A Wizzi plugin must be a NodeJS package, and must export a Wizzi Plugin Interface.

            glo-item( Wizzi Plugin Interface)
                span
                    + A Wizzi Plugin Interface is the interface that a Wizzi Pugin must export
                        \b in its index file, so that the Wizzi Plugin Manager can retrieve
                        \b its Loaders, transformers, generators, wizzifiers
                        \b and cheatsheets.

            glo-item( Wizzi Production )
                span
                    + A Wizzi Production is a set of Wizzi Actions 
                        \b for generating one or more software artifacts.

            glo-item( Wizzi Schema )
                span 
                    + A Wizzi Schemas is the core modeling tool of Wizzi.
                        \b In it you define an object model of 
                        \b named and typed elements 
                        \b that map the ITTF Nodes of an ITTF Document.
                        \b A production of the core plugin 
                    to-plugin( wzschema
                    + transforms a Wizzi Schema into a Wizzi Model DOM, a javascript
                        \b class that implements the schema object model. Wizzi Model Instances can
                        \b load and validate mTrees data.
                        \b Typed elements become classes and you can write methods 
                        \b for filtering and manipulating the loaded data.

            glo-item( Wizzi Store System )
                span 
                    + A Wizzi Store System implements a Virtual File System
                        \b for retrieving ITTF Documents. Currently the 
                        \b Wizzi Store Systems are: \b
                    high-code( filesystem )
                    + and \b 
                    high-code( json )
                    + . The \b
                    high-code( json )
                    + Virtual file system is a powerful tool for executing productions in the cloud or
                        \b behind your own http endpoints. 

            glo-item( Wizzi Studio )
                span
                    + Wizzi Studio is a NodeJS / Express / MongoDb / Typescript application
                        \b for managing Wizzi Productions that must be run locally 
                        \b accessing the file system of your desktop.
            
            glo-item( wizzifier )
                span
                    + A plugin may implement a wizzifier for its schema. A wizzifier converts an artifact to its ITTF Document source.
                        \b These core plugins have a wizzifier: \b
                    to-plugin( css )
                    + , \b
                    to-plugin( html )
                    + , \b
                    to-plugin( js )
                    + , \b
                    to-plugin( json )
                    + , \b
                    to-plugin( ts )
                    + , \b
                    to-plugin( svg )
                    + , \b
                    to-plugin( yaml )
                    + and \b
                    to-plugin( xml )
                    + .

            glo-item( wizzify )
                span
                    + To wizzify means to executes a 
                    high-code( wizzifier )
                    + . It converts an artifact to its ITTF Document source.