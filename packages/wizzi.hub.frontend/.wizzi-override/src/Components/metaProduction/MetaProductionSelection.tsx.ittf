module

    $
        var myName = 'MetaProductionSelection';
        var myDisplayName = 'Components.metaproduction.' + myName;

    import React
        @ useState
        from "react"

    import
        @ JobItem
        from "@/Data/types"
    
    import
        @ AppState
        @ MetaSelectionState
        from "@/Data/mvc/MetaProduction/types"

    import
        @ getMvc
        from "@/Data/mvc/MetaProduction"

    import
        @ SelectableCollection
        from "@/Data/Components/SelectableCollection"

    $if TODO
        import
            @ SpinnerView
            from "@/Components/utils/SpinnerView"
    
    import
        @ Jobs
        from "@/Components/Jobs"

    import
        @ GenericSelectionList
        from "@/Components/metaProduction/GenericSelectionList"

    import
        @ executeMetaJobFilters        
        from "./filters"

    :type MetaProductionSelectionProps
        :{
            :p appState
                :ref AppState
            :p setAppState
                :ref React.Dispatch<React.SetStateAction<AppState|null>>                    
            :p jobList
                :[
                    :ref JobItem
            :p metaSelectionState
                :ref MetaSelectionState
            :p setMetaSelectionState
                :ref React.Dispatch<React.SetStateAction<MetaSelectionState>>                    

    export
        function MetaProductionSelection
            param params
                :ref MetaProductionSelectionProps
            const
                {
                    @ appState
                    @ setAppState
                    @ jobList
                    @ metaSelectionState
                    @ setMetaSelectionState
                = params
            +
            const [availableCategoriesSearchText, setAvailableCategoriesSearchText] = useState('')
            const [availableMetaProductionsSearchText, setAvailableMetaProductionsSearchText] = useState('')
            +
            let
                {
                    @ pluginCatSelId
                    @ pluginSelId
                    @ catSelId
                    @ prodSelId
                    @ selCounter
                = metaSelectionState
            +
            let prodCatSel
                :ref SelectableCollection
                _ SelectableCollection.getEmpty
            let prodSel
                :ref SelectableCollection
                _ SelectableCollection.getEmpty
            if appState.currentJob && catSelId && prodSelId
                set prodCatSel
                    _ SelectableCollection.get
                        @ catSelId
                set prodSel
                    _ SelectableCollection.get
                        @ prodSelId
            +
            function updateFilters
                _ executeMetaJobFilters
                    {
                        @ pluginCatSelId 
                        @ pluginSelId 
                        @ catSelId
                        @ prodSelId
                        @ selCounter
                # rerender
                _ setMetaSelectionState
                    {
                        @ ...metaSelectionState
                        @ selCounter selCounter + 1
                if false
                    info '${myDisplayName}.prodCatSel.items', prodCatSel.items
                    info '${myDisplayName}.prodCatSel.filterExcludeArray', prodCatSel.filterExcludeArray
                    info '${myDisplayName}.prodSel.items', prodSel.items
                    info '${myDisplayName}.prodSel.filterExcludeArray', prodSel.filterExcludeArray
            +
            $if TODO
                if !prodCatSel || !appState.selectedMetaPlugins || appState.selectedMetaPlugins.length < 1
                    return
                        < SpinnerView
                +
            +
            return 
                $*
                . work-area-content-main
                    width 100%
                    height 100%
                    display flex
                    flex-direction row
                *$
                . w-full flex-1 flex
                    < Jobs
                        @ reload {true}
                        @ jobs {jobList}
                        @ currentJob { appState.currentJob }
                        @ onSelect
                            =>
                                param jobItem
                                _ setAppState
                                    {
                                        @ ...appState
                                        @ currentJob jobItem
                                        @ currentJobId jobItem.id
                                _ getMvc().controller.setAppState
                                    {
                                        @ currentJobId jobItem.id
                                        @ activeView appState.activeView
                                        @ reloadCount appState.reloadCount
                                    =>
                    {
                        &&
                            + appState.currentJob && catSelId && prodSelId
                            < React.Fragment
                                < GenericSelectionList
                                    @ selectableItems {prodCatSel.getSelected()}
                                    @ title "Selected production categories"
                                    @ onUnselect
                                        =>
                                            param categoryName
                                            if appState.currentJob
                                                _ prodCatSel.unSelect(categoryName)
                                                _ getMvc().controller.selectMetaProductionCategory
                                                    @ appState.currentJob
                                                    @ categoryName
                                                    @ 'unselect'
                                                _ updateFilters
                                < GenericSelectionList
                                    @ selectableItems {prodCatSel.getUnselected()}
                                    @ title "Available production categories"
                                    @ searchViewPlaceholder "search category ..."
                                    @ searchText {availableCategoriesSearchText}
                                    @ onSearchTextChanged
                                        =>
                                            param value
                                            _ setAvailableCategoriesSearchText
                                                @ value
                                            _ prodCatSel.setSearchText(value)
                                            _ updateFilters
                                    @ onSelect
                                        =>
                                            param categoryName
                                            if appState.currentJob
                                                _ prodCatSel.select(categoryName)
                                                _ getMvc().controller.selectMetaProductionCategory
                                                    @ appState.currentJob
                                                    @ categoryName
                                                    @ 'select'
                                                _ updateFilters
                                < GenericSelectionList
                                    @ selectableItems {prodSel.getSelected()}
                                    @ title "Selected productions"
                                    @ onUnselect
                                        =>
                                            param metaProductionName
                                            if appState.currentJob
                                                _ prodSel.unSelect(metaProductionName)
                                                _ getMvc().controller.selectMetaProduction
                                                    @ appState.currentJob
                                                    @ metaProductionName
                                                    @ 'unselect'
                                                _ updateFilters
                                                _ setAppState
                                                    {
                                                        @ ...appState
                                                        @ selectedMetaProductions prodSel.getSelected()
                                < GenericSelectionList
                                    @ selectableItems {prodSel.getUnselected()}
                                    @ title "Available productions"
                                    @ searchViewPlaceholder "search production ..."
                                    @ searchText {availableMetaProductionsSearchText}
                                    @ onSearchTextChanged
                                        =>
                                            param value
                                            _ setAvailableMetaProductionsSearchText
                                                @ value
                                            _ prodSel.setSearchText(value)
                                            _ updateFilters
                                    @ onSelect
                                        =>
                                            param metaProductionName
                                            if appState.currentJob                                            
                                                _ prodSel.select(metaProductionName)
                                                _ getMvc().controller.selectMetaProduction
                                                    @ appState.currentJob
                                                    @ metaProductionName
                                                    @ 'select'
                                                _ updateFilters
                                                _ setAppState
                                                    {
                                                        @ ...appState
                                                        @ selectedMetaProductions prodSel.getSelected()