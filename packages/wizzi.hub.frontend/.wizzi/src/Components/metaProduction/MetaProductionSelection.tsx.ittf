module

    import React
        @ useState
        from "react"

    import
        @ JobItem
        from "@/Data/types"
    
    import
        @ AppState
        @ MetaSelectionState
        from "@/Data/mvc/MetaProduction/types"

    import
        @ getMvc
        from "@/Data/mvc/MetaProduction"

    import
        @ SelectableCollection
        from "@/Data/Components/SelectableCollection"

    import
        @ SpinnerView
        from "@/Components/utils/SpinnerView"
    
    import
        @ Jobs
        from "@/Components/Jobs"

    import
        @ GenericSelectionList
        from "@/Components/metaProduction/GenericSelectionList"

    import
        @ executeMetaJobFilters        
        from "./filters"

    :type MetaProductionSelectionProps
        :{
            :p appState
                :ref AppState
            :p setAppState
                :ref React.Dispatch<React.SetStateAction<AppState>>                    
            :p jobList
                :[
                    :ref JobItem
            :p metaSelectionState
                :ref MetaSelectionState
            :p setMetaSelectionState
                :ref React.Dispatch<React.SetStateAction<MetaSelectionState>>                    

    export
        function MetaProductionSelection
            param params
                :ref MetaProductionSelectionProps
            const
                {
                    @ appState
                    @ setAppState
                    @ jobList
                    @ metaSelectionState
                    @ setMetaSelectionState
                = params
            +
            const [availableCategoriesSearchText, setAvailableCategoriesSearchText] = useState('')
            const [availableMetaProductionsSearchText, setAvailableMetaProductionsSearchText] = useState('')
            +
            let
                {
                    @ pluginCatSelId
                    @ pluginSelId
                    @ catSelId
                    @ prodSelId
                    @ selCounter
                = metaSelectionState
            +
            if !catSelId || !prodSelId
                return
                    . work-area-content-main
            +
            const catSel
                _ SelectableCollection.get
                    @ catSelId
            const prodSel
                _ SelectableCollection.get
                    @ prodSelId
            +
            function updateFilters
                _ executeMetaJobFilters
                    {
                        @ pluginCatSelId 
                        @ pluginSelId 
                        @ catSelId
                        @ prodSelId
                # rerender
                _ setMetaSelectionState
                    {
                        @ ...metaSelectionState
                        @ selCounter selCounter + 1
            +
            if !catSel || !appState.selectedMetaPlugins || appState.selectedMetaPlugins.length < 1
                return
                    < SpinnerView
            +
            if false
                error 'MetaProductionSelection.catSel.items', catSel.items
                error 'MetaProductionSelection.catSel.filterExcludeArray', catSel.filterExcludeArray
                error 'MetaProductionSelection.prodSel.items', prodSel.items
                error 'MetaProductionSelection.prodSel.filterExcludeArray', prodSel.filterExcludeArray
            +
            return 
                . work-area-content-main
                    < Jobs
                        @ reload {true}
                        @ jobs {jobList}
                        @ onSelect
                            =>
                              param jobItem
                              _ setAppState
                                  {
                                      @ ...appState
                                      @ currentJob jobItem
                                      @ currentJobId jobItem.id
                              _ getMvc().controller.setAppState
                                  {
                                      @ currentJobId jobItem.id
                                      @ activeView appState.activeView
                                      @ reloadCount appState.reloadCount
                                  =>
                    {
                        &&
                            + appState.currentJob
                            < React.Fragment
                                < GenericSelectionList
                                    @ selectedableItems {catSel.getSelected()}
                                    @ title "Selected production categories"
                                    @ onUnselect
                                        =>
                                            param categoryName
                                            _ catSel.unSelect(categoryName)
                                            _ getMvc().controller.selectMetaProductionCategory
                                                @ appState.currentJob
                                                @ categoryName
                                                @ 'unselect'
                                            _ updateFilters
                                < GenericSelectionList
                                    @ selectedableItems {catSel.getUnselected()}
                                    @ title "Available production categories"
                                    @ searchViewPlaceholder "search category ..."
                                    @ searchText {availableCategoriesSearchText}
                                    @ onSearchTextChanged
                                        =>
                                            param value
                                            _ setAvailableCategoriesSearchText
                                              @ value
                                            _ catSel.setSearchText(value)
                                            _ updateFilters
                                    @ onSelect
                                        =>
                                            param categoryName
                                            _ catSel.select(categoryName)
                                            _ getMvc().controller.selectMetaProductionCategory
                                              @ appState.currentJob
                                              @ categoryName
                                              @ 'select'
                                            _ updateFilters
                                < GenericSelectionList
                                    @ selectedableItems {prodSel.getSelected()}
                                    @ title "Selected productions"
                                    @ onUnselect
                                        =>
                                            param metaProductionName
                                            _ prodSel.unSelect(metaProductionName)
                                            _ getMvc().controller.selectMetaProduction
                                                @ appState.currentJob
                                                @ metaProductionName
                                                @ 'unselect'
                                            _ updateFilters
                                            _ setAppState
                                                {
                                                    @ ...appState
                                                    @ selectedMetaProductions prodSel.getSelected()
                                < GenericSelectionList
                                    @ selectedableItems {prodSel.getUnselected()}
                                    @ title "Available productions"
                                    @ searchViewPlaceholder "search production ..."
                                    @ searchText {availableMetaProductionsSearchText}
                                    @ onSearchTextChanged
                                        =>
                                            param value
                                            _ setAvailableMetaProductionsSearchText
                                                @ value
                                            _ prodSel.setSearchText(value)
                                            _ updateFilters
                                    @ onSelect
                                        =>
                                            param metaProductionName
                                            _ prodSel.select(metaProductionName)
                                            _ getMvc().controller.selectMetaProduction
                                                @ appState.currentJob
                                                @ metaProductionName
                                                @ 'select'
                                            _ updateFilters
                                            _ setAppState
                                                {
                                                    @ ...appState
                                                    @ selectedMetaProductions prodSel.getSelected()