$group
    $if wzCtx.Build.useWizziJsonFactory
        +
        export
            async-function generateArtifact
                param filePath
                    :string
                param files
                    :ref packiTypes.PackiFiles
                param context
                    :any
                    :optional
                param options
                    :ref GenerationOptions
                    :optional
                :return
                    :ref Promise
                        :param
                            :ref GeneratedArtifact
                const _options
                    :ref GenerationOptions
                    = options || {}
                return
                    new Promise
                        async=>
                            param resolve
                            param reject
                            if !verify.isObject(files)
                                return
                                    _ reject
                                        {
                                            @ action 'wizzi.productions.generateArtifact'
                                            @ message 'files parameter must be an object of type PackiFiles'
                                            @ files
                            # 7/6/24 changed `artifactName` to `artifactName`
                            const artifactName = _options.artifactName ? _options.artifactName : null
                            let jsonwf
                                :any
                                =
                                    {
                            let generationContext
                                :any
                                =
                                    {
                            const ittfDocumentUri
                                _ ensurePackiFilePrefix(filePath)
                                    :as
                                        :string
                            const siteDocumentUri
                                _ Object.keys(files).find
                                    =>
                                        param k
                                        _ k.endsWith('site.json.ittf')
                            try
                                set jsonwf =
                                    await
                                        _ createJsonFsAndFactory(files)
                                set generationContext =
                                    _ Object.assign
                                        @ context || {}
                                        {
                                            @ site
                                                iif siteDocumentUri
                                                    then
                                                        await
                                                            _ loadModelInternal
                                                                @ jsonwf.wf
                                                                _ ensurePackiFilePrefix(siteDocumentUri)
                                                                {
                                                    else null
                                            ...
                                                await
                                                    _ inferAndLoadContextJson(jsonwf.wf, files, ittfDocumentUri, 'twin')
                                error "da dan", ittfDocumentUri
                                _ jsonwf.wf.loadModelAndGenerateArtifact
                                    @ ittfDocumentUri
                                    {
                                        @ modelRequestContext generationContext || {}
                                        @ artifactRequestContext _options.artifactContext || {}
                                    @ artifactName
                                    =>
                                        param err
                                            :any
                                        param result
                                            :string
                                        if err
                                            error err
                                            return reject(err)
                                        _ resolve
                                            {
                                                @ artifactContent result
                                                @ sourcePath filePath
                                                @ artifactGenerator artifactName
                            catch ex
                                return reject(ex)
    +
    export
        async-function generateArtifactFs
            param filePath
                :string
            param context
                :any
                :optional
            param options
                :ref GenerationOptions
                :optional
            :return
                :ref Promise
                    :param
                        :ref GeneratedArtifact
            const _options
                :ref GenerationOptions
                = options || {}
            return
                new Promise
                    async=>
                        param resolve
                        param reject
                        const artifactName = _options.artifactName ? _options.artifactName : null
                        # TODO catch error
                        const plugins
                            iif _options.pluginsBaseFolder && _options.plugins
                                then
                                    {
                                        @ pluginsBaseFolder _options.pluginsBaseFolder
                                        @ items _options.plugins
                                else null
                        const wf
                            await
                                _ createFilesystemFactory
                                    @ plugins
                                    @ null
                                    {
                        try
                            _ wf.loadModelAndGenerateArtifact
                                @ filePath
                                {
                                    @ modelRequestContext context || {}
                                    @ artifactRequestContext context || {}
                                @ artifactName
                                =>
                                    param err
                                    param result
                                    if err
                                        return reject(err)
                                    _ resolve
                                        {
                                            @ artifactContent result
                                            @ sourcePath filePath
                                            @ artifactGenerator artifactName
                        catch ex
                            return reject(ex)
    +
    export
        async-function generateArtifactDb
            param owner
                :string
            param name
                :string
            param context
                :any
                :optional
            :return
                :ref Promise
                    :param
                        :ref GeneratedArtifact
            throw new Error(myname + '.generateArtifactDb not yet implemented')
