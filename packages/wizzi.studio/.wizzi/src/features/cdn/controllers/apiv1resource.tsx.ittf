module
    $
        var ctrl = {
            name: 'ApiV1CdnResource',
            path: '/api/v1/cdn',
            apiSecured: wzCtx.App.isLocal == false,
        }
    v08/ts/controller( &ctrl )
        $append imports
            import
                @ getCdnResourceList
                @ validateCdnResource
                @ getCdnResource
                @ getCdnResourceById
                @ updateCdnResource
                @ createCdnResource
                @ deleteCdnResource
                @ invalidateCache
                from '../api/resource'
            +
            const myname = 'features/cdn/controllers/apiv1resource'
        v08/ts/route( get, /:owner, this.getCdnResourceList )
        v08/ts/route( get, /checkname/:owner/:name, this.getCheckResourceName )
        v08/ts/route( get, /:owner/:name, this.getCdnResource )
        v08/ts/route( put, /:owner/:name, this.putCdnResource )
        v08/ts/route( put, /:id, this.putCdnResourceById )
        v08/ts/route( post, /:owner/:name, this.postCdnResource )
        v08/ts/route( delete, /:owner/:name, this.deleteCdnResource )
        $append handlers
            v08/ts/handler( getCdnResourceList )
                _ getCdnResourceList
                    {
                        { query
                            @ owner request.params.owner
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_send_fail( getCdnResourceList )
            v08/ts/handler( getCheckResourceName )
                _ validateCdnResource
                    @ request.params.owner
                    @ request.params.name
                    ._ then
                        =>
                            param result
                                :any
                            # loog 'getCheckResourceName.result', result
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_fail( getCheckResourceName )
            v08/ts/handler( getCdnResource )
                _ getCdnResource
                    @ request.params.owner
                    @ request.params.name
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_send_fail( getCdnResource )
            v08/ts/handler( postCdnResource )
                _ createCdnResource
                    @ request.params.owner
                    @ request.params.name
                    @ request.body.contents
                    ._ then
                        =>
                            param result
                                :any
                            # loog 'postCdnResource.create.result', result
                            _ invalidateCache
                                @ request.params.owner
                                @ request.params.name
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_send_fail( postCdnResource )
            v08/ts/handler( putCdnResource )
                _ updateCdnResource
                    @ null
                    @ request.params.owner
                    @ request.params.name
                    @ request.body.contents
                    ._ then
                        =>
                            param result
                                :any
                            _ invalidateCache
                                @ request.params.id
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_send_fail( putCdnResource )
            v08/ts/handler( putCdnResourceById )
                _ updateCdnResource
                    @ request.params.id
                    @ null
                    @ null
                    @ request.body.contents
                    ._ then
                        =>
                            param result
                                :any
                            _ invalidateCache
                                @ request.params.id
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_send_fail( putCdnResourceById )
            v08/ts/handler( deleteCdnResource )
                _ deleteCdnResource
                    @ request.params.owner
                    @ request.params.name
                    ._ then
                        =>
                            param result
                                :any
                            _ invalidateCache
                                @ request.params.id
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_send_fail( deleteCdnResource )
